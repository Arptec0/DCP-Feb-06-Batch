DCP-Feb-06-Batch

######
Day-1
######
		Introduction to DevOps
		Why DevOps ??
		
		SDLC Process ??
		Software 
		
		SDLC -- Software Development Life Cycle
		
		Develop a software Application :
					Desktop
					Web
					Mobile 
		
		Free-lance Web Developer :::
			Create a E-Commerce website and host in web servers 
			
		SDLC 
			Requirement Analysis
			Design
			Code & Development 
			Testing 
			Implementation / Deployments
			Maintainence - Enhancements/Monitoring
			
		Process ::: 
			Create a E-Commerce website and host in web servers - 6months
			
		Water-fall Model ---			Linear Approach.
			Requirement Analysis
			Design
			Code & Development ==> 
			Testing 
			Implementation / Deployments
			Maintainence - Enhancements/Monitoring
		
		New CR : 
		
			Requirement Analysis
			Design
			Code & Development ==> 
			Testing 
			Implementation / Deployments
			Maintainence - Enhancements/Monitoring
			
		Agile Methodilogies :::
		
			Modules / Iterations ::::
			Create a E-Commerce website and host in web servers - 6months
		
		Module-1 / Iteration 1	
		
			Requirement Analysis
			Design
			Code & Development ==> 
			Testing 
			Implementation / Deployments
			Maintainence - Enhancements/Monitoring
			
		Module-2 / Iteration 2	
		
			Requirement Analysis
			Design
			Code & Development ==> 
			Testing 
			Implementation / Deployments
			Maintainence - Enhancements/Monitoring		

		Module-3 / Iteration 3	
		
			Requirement Analysis
			Design
			Code & Development ==> 
			Testing 
			Implementation / Deployments
			Maintainence - Enhancements/Monitoring
			
		
		3 Modules --> deployment 
		
		
		DevOps 
		
			Requirement Analysis
			Design
			Code & Development ==> 
			Testing 
			Implementation / Deployments
			Maintainence - Enhancements/Monitoring
			
		
		Agile vs DevOps ::::
		
		Create a E-Commerce website and host in web servers
		
		5 to 10 ???
		
		Application :::
		
			Monolith Application Architecture ===> 
			
			Micro-service based Architecture
			
			Create a E-Commerce website and host in web servers
			www.amazon.com
			
			End-user ::
				
				Sign-up							Miroservice --> independently create/work on this, test & deploy to prod.
				Sign-In
				Search for products
				Add to cart
				Place the order 
				Make Payment
				Confirm Order
				Track order
				
				New Feature ---> independently create/work on this, test & deploy to prod.
				
				
		Developer !!!
		
		
		DevOps Strategy ::: 
			Why ???

		SDLC :::
		
			Business Analyst / Application Architects --
			
			Infra-Structure Team			-- 	Provision and configure the servers
			Development Team				--	Develop the code -- Coding...
			Testing Team 					-- 	Testing QA,UAT
			Release Management Team			-- 	Ensure the product release on time
			Production Support Team 		--	support the real appln.
			Production Monitoring Team 		-- 	Monitor the production servers & Applications running production envrionment
			
			Continuous Development 		--->> 
				developer1 -- java web application --> 		create the scr code - perform build - create artifacts - unit test.
								
								signup.jsp ==> build (Compile the src code & Create artifacts(binaries)*.war/*.jar/*.dll/*.exec)
												
				
								Using Eclipse based IDE for coding
								Visual Studio Code  IDE
								Visual Studio 
								Pycharm
			
			Environments ::::
			
			Non-Production Environment								Production Environment
			
				DEV	  - develop 											PROD  
				BUILD - build
				TEST
					QA 
					UAT 
					
			Continuous Integration   
				===> Automation of build (Compile the src code & Create artifacts(binaries) & integrate for testing
				
			Continuous Delivery
				
			Continuous Testing 				
			
			Continuous Deployment
			
			Continuous Monitoring
			
			Non-Prod 																			Prod Environment
			
			Build --> Created artifacts --> publised to QA --> publised to UAT 		---> 		Release to PROD Environment
			
			
			Continuous Delivery   --> Need Manual Approval for Prod Release 
			
			Continuous Deployment --> Automated Prod Release --> zero downtime Kubernetes
			
			
		Applications :::
		
			amazon
			facebook
			netflix ......
			
		Ins/finance domain
		
			DevOps Strategy :::
			
			Release any new feature/product 
			
			dependencies.
			
			create a deployment window ::: 4 - 6hrs
			
			Continuous Delivery
			

		Continuous testing ::
		
			Non-Prod 																			Prod Environment
			
			Build --> Created artifacts --> publised to QA --> publised to UAT 		---> 		Release to PROD Environment
			
			
			
		Finance Domain
		
		Telecomm Domain ;;
		
				SP1 -- decided to release any new product/offer/service to customers -- that shd be done ASAP.
				SP2 -- decided to release any new product/offer/service to customers -- that shd be done ASAP.	

Adhoc Request ::: eod: DEV,testing,rm -- need severs 
				
			test servers.
			
		Jenkins to automate... 	terraform, ansible...
			
			
			
			
		Continuous Monitoring	
		
			Create a E-Commerce website and host in web servers --- End-users are using this portal.
					No. of users   10000 users -- 20000 
					Infra-Structure - health status.
					Security attacks 
					
					
			Infra-Structure Monitoring --->  Promethus/Grafana
			
			Application Monitoring AppDynamics
			
			
		DevOps Architects
		DevOps Engineers 
		
	
			People 
			process -->  DevOps Strategies 
			tools   --> 
			
########
Day-2
########

			Lab Environment 
			Version Control System Using GIT.

		DevOps Tools :::
		
			Open-Source Tools ---> Self-Managed Tools 
			
				jenkins 
			
			DevOps Managed Services/Tools --- 
				AWS / Az / GCP 
				
				
		AWS Cloud Platform :::   				-- 	Free Tier Account! 12 Months.
			Virtual Machines ::::					EC2 Instances - Linux 
				Install all the devops tools. 	

		AWS free - tier account
		
		github.com   -- Remote Repository
		
		dockerhub.com
		
		Visual Studio Code 			https://code.visualstudio.com/download		
		MobaXterm/putty		-- SSH Client -- used to access Remote servers from our local machine.
			https://mobaxterm.mobatek.net/download.html


Tasks::			
		1. Create Github Account.	
		2. Create AWS Free-tier.		https://aws.amazon.com/console/
		3. Visual Studio Code 			https://code.visualstudio.com/download		
		4. MobaXterm/putty		-- SSH Client -- used to access Remote servers from our local machine.
										https://mobaxterm.mobatek.net/download.html		
		
		
		
		Repository 	-- Collection of Folders and files. 
					-- Version Control.
					
					
		sync-fork
		

Version Control System Using GIT ::::

		Version Control System ::::
		
		Development Environment ::::
				Coding & Development --->
				
				Developer1  	-> 			signin.jsp 
					IDE -- Visual Studio Code / Eclipse 
					
					signin.jsp -- saved ..
					
					incremental Changes ---> 
					
					signin.jsp - saved -- build -- Unit-test
					signin.jsp - saved -- build -- Unit-test
					signin.jsp - saved -- build -- Unit-test
					signin.jsp - saved -- build -- Unit-test
					signin.jsp - saved -- build -- Unit-test
					signin.jsp - saved -- build -- Unit-test
					signin.jsp - saved -- build -- Unit-test
					
				VCS ---> 
				
					signin.jsp -- save -- v1.0
					signin.jsp -- save -- v1.1
					signin.jsp -- save -- v1.2
					signin.jsp -- save -- v1.3
					signin.jsp -- save -- v1.4
					signin.jsp -- save -- v1.5
					signin.jsp -- save -- v1.6   =>>>
					
					versions / commit_id / tags 
					
				Version Control System :::
				
					-	Is used to version control the source code 
					-	Used to Track the changes
					
					-	Used to perform Parallel Development.
						using Branch. 
				
				Repository	-- Is a collection of Files and Folders which are version controlled by GIT.
				
					
		Free-lance web Developer!!!
		
				Creating the Project
					
					E_Commerce_xyz Project Folder	  -- Local Repo.				
						index.jsp
						validation.java
					
				Centralize VCS --->  google docs - web service 
				
		10-lines		index.jsp ---> saved & commited the file to git repo -- Commit_id - v1.0
										save & 
										
			
		DevOps == 
		
			-	Install GIT & Administration https://git-scm.com/downloads
			
			-	Git work flow 
			
			-	Git Branching Strategies 
			
		
		GIT Work Flow :::	
		
		
			Local Repository 	(Local Machine)													Remote Repository (Remote Servers)
			
			New index.jsp -- save in local machine & version control in local machine	====>   Remote Repo index.jsp
																						Push TO 	

			index.jsp
				func1
				func2
				func3

		
		Installion of GIT -- in Dev Environment		https://git-scm.com/downloads	
		
				VS Code , GIT 
				
					Window -- Install GIT 			-- Git Bash (CLU) , GIT GUI 
					Linux
					Mac 		
		
		Workload :::
		
			Create a New Projects
			Change Request - Enhance Projects
			Bug fixing 
			
			
		Open GIT Bash ::
		
			d: 
			
			cd d: 
			mkdir Home_Dir
			cd Home_Dir
			mkdir Project_Repo1
			cd Project_Repo1
				git repo1
			
			
		GIT BASH :: - CLU 

		Create local repo.
		
		git init ==> Initialize Local Repository & Create a default branch(master/main)
		
		Create the files 
		
		git add 
		
		git commit 
			
			
Summary ::
		
		Tasks::			
		1. Create Github Account.	
		2. Create AWS Free-tier.		https://aws.amazon.com/console/
		3. Visual Studio Code 			https://code.visualstudio.com/download		
		4. MobaXterm/putty		-- SSH Client -- used to access Remote servers from our local machine.
										https://mobaxterm.mobatek.net/download.html		
		
		5. Installion of GIT -- in Dev Environment		https://git-scm.com/downloads			
				VS Code , GIT 
					Window -- Install GIT 			-- Git Bash (CLU) , GIT GUI 			
					
########
DAY-3
########
		
		Launch EC2 Instance ---> Amazon Linux 2 Instance
		
		Installation of GIT 
		Working on GIT 
			Workflow 
			
			
		Virtual Machines -- VMs  ==> Computing Device create in a Cloud envi.
			AWS Cloud Platform	
				Regions
					Availability zones
						EC2 Instances (VMs)
		
		
			Launch EC2 Instance ---> Amazon Linux 2 Instance
				
				Access / Login to VM ::
					Using EC2 Instance Connect 					
					SSH Clients
						MobaXterm/putty						
					Terminal
					
			Installation of GIT on AWS Instance
			
				Package Manager ===> Linux --> Fedora(rhel,centos,amazon linux2) ,Debian(ubuntu)
				
				yum				
				apt-get
				rpm
				amazon-linux-extras
				
				all these pkg managers shd be executed as a root user only.
				
				
				Install git : https://git-scm.com/downloads	
				
				$ sudo -i
				$ yum install git -y
		
			Working on GIT 
				
				Local git repo													remote git repo(github)
					working dir. 	staging area 		local_gitrepo


				All GIT Misc. Commands
				
				Git Branches
				
				Git Branching Strategies 
				
				Git Remote Repository
				
			index.jsp ==> save. 
			
				commit 	== unique commit_id 
							user details  name of user & identity(email_id)
			
			git config ===> command is used to define default properties for git repo.
			
			git config --global user.email "xxxx@gmail.com"
			git config --global user.name "Loksai"
	
			git config user.email "xxxx@gmail.com"
			git config user.name "Loksai"
			
			
			git config --list 
			
		
			GIT IGNORE ::::
			
			
				Java_Web_App_Project					git repo 
					signin.java
					email_validate.java
					payment.java
					index.jsp 
					readme.txt
					xxx.doc
					indx.war 
					
			git ignore!!!!
			
				git init 
					
			
				create .gitignore file and add the contents to be ignored
					readme.txt
					xxx.doc
					indx.war
					secrets
					credentials
					
					read.md == commited 
					
		
			
				Java_Web_App_Project					Local git repo 						===> 			remote_git_repo
					signin.java			===> read user_Cren details,auth_user
					email_validate.java
					payment.java
					index.jsp 
					readme.txt
					xxx.doc
					indx.war 
					secrets
					credentials	
					
				Automation :::
				
					shell,yaml,python,groovy scripts 		===>		gitOps
					
				
				
				git diff command

  549  mkdir DCP-Feb6-Batch
  550  cd DCP-Feb6-Batch/
  551  ls
  552  clear
  553  ls
  554  clear
  555  mkdir  repo1
  556  cd repo1/
  557  git init
  558  echo "rec1" >> f1.txt
  559  git add f1.txt
  560  git status
  561  git commit -m "CM1"
  562  git status
  563  clear
  564  echo "rec1" >> file1.txt
  565  echo "rec1" >> file2.txt
  566  echo "rec1" >> file3.txt
  567  echo "rec1" >> index.jsp
  568  echo "rec1" >> s1.java
  569  ls
  570  git status
  571  clear
  572  git status
  573  git add *.java
  574  git status
  575  git add .
  576  git status
  577  git commit -m "CM2"
  578  git log
  579  git config list
  580  git config --list
  581  clear
  582  git log
  583  git config --list
  584  clear
  585  cd ..
  586  mkdir repo2
  587  cd repo2/
  588  git init
  589  clear
  590  ls -a
  591  vi .gitignore
  592  ls
  593  ls -a
  594  git status
  595  git add .
  596  git commit -m "Initial Commit - Created GIT IGNORE File"
  597  git status
  598  ls
  599  cat .gitignore
  600  ls
  601  echo "rec1" >> file1.txt
  602  echo "rec1" >> s1.md
  603  echo "rec1" >> sample1.txt
  604  ls
  605  git add .
  606  git status
  607  git commit -m "asdfa"
  608  ls
  609  clear
  610  git log
  611  clear
  612  git log
  613  git log --oneline
  614  git log --stat
  615  git log -1
  616  clear
  617  git log --oneline
  618  git show 09df490
  619  clear
  620  ls
  621  ls
  622  git status
  623  cat file1.txt
  624  echo "rec2" >> file1.txt
  625  echo "rec3" >> file1.txt
  626  clear
  627  ls
  628  cat file1.txt
  629  git diff
  630  git add .
  631  git diff --cached
  632  git diff
  633  git diff --name-only --cached
  634  history

Summary :::
			
		Launch EC2 Instance ---> Amazon Linux 2 Instance
		Installation of GIT in aws  
		
		Working on GIT 	
					
					
					
					
